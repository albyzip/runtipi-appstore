services:
  openproject:
    image: openproject/community:15
    container_name: openproject
    restart: unless-stopped
    ports:
      - ${APP_PORT}:8080
    environment:
      DATABASE_URL: postgres://postgres:${OP_POSTGRES_PASSWORD}@openproject-postgres:5432/openproject
      SECRET_KEY_BASE: ${OP_SECRET_KEY_BASE}
      OPENPROJECT_HOST__NAME: ${OP_HOST_NAME}
      OPENPROJECT_HTTPS: ${OPENPROJECT_HTTPS}
      RAILS_MIN_THREADS: "4"
      RAILS_MAX_THREADS: "16"
      PGPASSWORD: ${OP_POSTGRES_PASSWORD}
    volumes:
      - ${APP_DATA_DIR}/data/assets:/var/openproject/assets
      - ${APP_DATA_DIR}/data/pgdata:/var/openproject/pgdata
    depends_on:
      openproject-postgres:
        condition: service_healthy
      openproject-cache:
        condition: service_started
    networks:
      - tipi_main_network
    labels:
      traefik.enable: true
      traefik.http.middlewares.openproject-web-redirect.redirectscheme.scheme: https
      traefik.http.services.openproject.loadbalancer.server.port: "8080"
      traefik.http.routers.openproject-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.openproject-insecure.entrypoints: web
      traefik.http.routers.openproject-insecure.service: openproject
      traefik.http.routers.openproject-insecure.middlewares: openproject-web-redirect
      traefik.http.routers.openproject.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.openproject.entrypoints: websecure
      traefik.http.routers.openproject.service: openproject
      traefik.http.routers.openproject.tls.certresolver: myresolver
      traefik.http.routers.openproject-local-insecure.rule: Host(`openproject.${LOCAL_DOMAIN}`)
      traefik.http.routers.openproject-local-insecure.entrypoints: web
      traefik.http.routers.openproject-local-insecure.service: openproject
      traefik.http.routers.openproject-local-insecure.middlewares: openproject-web-redirect
      traefik.http.routers.openproject-local.rule: Host(`openproject.${LOCAL_DOMAIN}`)
      traefik.http.routers.openproject-local.entrypoints: websecure
      traefik.http.routers.openproject-local.service: openproject
      traefik.http.routers.openproject-local.tls: true

  openproject-postgres:
    image: postgres:14
    container_name: openproject-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${OP_POSTGRES_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: openproject
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tipi_main_network

  openproject-cache:
    image: redis:7.0
    container_name: openproject-cache
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    command: redis-server --save 900 1 --save 300 10 --save 60 10000
    networks:
      - tipi_main_network

networks:
  tipi_main_network:
    name: runtipi_tipi_main_network
    external: true